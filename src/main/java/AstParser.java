import org.apache.spark.sql.catalyst.parser.CatalystSqlParser;
import org.apache.spark.sql.catalyst.plans.logical.LogicalPlan;
import org.apache.spark.sql.catalyst.trees.TreeNode;
import org.apache.spark.sql.internal.SQLConf;

import java.util.List;

public class AstParser {


    public String astParser(String sqlTxt){
        SQLConf sqlConf = new SQLConf();
        //通过修改spark相关参数，解决部分select结果无法正常打印问题。
        //sqlConf.setConfString("spark.debug.maxToStringFields", "100");
        CatalystSqlParser sqlParser = new CatalystSqlParser(sqlConf);

        LogicalPlan logicalPlan =  sqlParser.parsePlan(sqlTxt);

        TreeNode treeNode = logicalPlan;


        //logicalPlan.asCode();
        List innerChildren = scala.collection.JavaConversions.seqAsJavaList(logicalPlan.innerChildren());

        List children = scala.collection.JavaConversions.seqAsJavaList( logicalPlan.children());


        for (int i =  0;i <innerChildren.size() ;i++){



            System.out.println(i+"-inner-"+innerChildren.get(i));
        }


        for (int i =  0;i <children.size() ;i++){
            System.out.println(i+"-child-"+children.get(i).toString());
        }
        //System.out.println(children.size());

        return logicalPlan.treeString();
    }

    public  static void  main(String args[]){

      // String str =  "insert into tab SELECT * FROM (SELECT ss FROM src) a join (select tz from src)b on a.key=b.key";
        //str = str.toUpperCase();
        String str = "with daren as (@#@  select@#@    id as author_id,@#@    pin as author_pin,@#@    userpic ,@#@    username,@#@    synopsis@#@  from@#@    fdm.fdm_mobile_sh_promotion_discovery_cms_discovery_release_user@#@  where@#@    dt = '2018-12-26'@#@),@#@@#@erji as (@#@  --达人sku最多二级@#@  select@#@    author_id,@#@    collect_list(concat_ws(':',cast(item_second_cate_cd as string),cast(cate2_nums as string))) as area_2nd_cate@#@  from@#@    (@#@      select@#@        *,@#@        row_number() over (partition by author_id order by cate2_nums desc) as row_index@#@      from@#@        (@#@          select author_id,@#@          coalesce(item_second_cate_cd,-1) as item_second_cate_cd,@#@          count(1) as cate2_nums@#@          from@#@            (@#@              select@#@                author_id,@#@                item_second_cate_cd@#@              from@#@                app.app_celebrity_article_sku_info_da@#@              where@#@                dt = '2018-12-26'@#@            )a@#@          group by@#@            author_id,@#@            coalesce(item_second_cate_cd,-1)@#@          order by@#@            author_id,@#@            cate2_nums desc@#@        ) b@#@    ) cc@#@  where@#@    row_index <= 10@#@  group by@#@    author_id@#@),@#@@#@dafen as (@#@  --达人商家打分@#@  select@#@    author_pin,@#@    sum(first_rate) / count(1) as salesman_rate@#@  from@#@    (@#@      select@#@        applicant_pin as author_pin,@#@        assignment_id,@#@        cast(substr(substring_index(rate, ',', 1), 2) as double) as first_rate@#@      from@#@        fdm.fdm_mobile_sh_promotion_discovery_cms_discovery_assignment_applicant_map_chain@#@      where@#@        dp = 'ACTIVE'@#@        and status in (13, 14, 15)@#@        and rate is not null@#@        and cast(substr(substring_index(rate, ',', 1), 2) as double) is not null@#@      group by@#@        applicant_pin,@#@        assignment_id,@#@        rate@#@@#@      union all@#@@#@      select@#@        author_pin,@#@        order_id,@#@        cast(substr(substring_index(rate, ',', 1), 2) as double) as first_rate@#@      from@#@        fdm.fdm_mobile_sh_promotion_discovery_investment_service_order_chain@#@      where@#@        dp = 'ACTIVE'@#@        and order_status in (13, 14, 15)@#@        and rate is not null@#@        and cast(substr(substring_index(rate, ',', 1), 2) as double) is not null@#@      group by@#@        author_pin,@#@        order_id,@#@        rate@#@    ) a@#@  group by@#@    author_pin@#@),@#@@#@sku as (@#@  select@#@    author_id,@#@    area,@#@    celebrity_type,@#@    area_tag,@#@    area_tag_id@#@  from@#@    app.app_celebrity_area_mid@#@  where@#@    dt='2018-12-26'@#@  group by@#@    author_id,@#@    area,@#@    celebrity_type,@#@    area_tag,@#@    area_tag_id@#@),@#@@#@fans_rank as (@#@  -- 粉丝数量@#@  --达人排名@#@  select@#@    author_id,@#@    fans_num,@#@    row_number() over (partition by 1 order by fans_num desc) as rank@#@from@#@    (@#@      select@#@        author_id,@#@        count(distinct fans_pin) as fans_num@#@      from@#@        app.app_celebrity_author_fans_mid@#@      where@#@        dt = '2018-12-26'@#@      group by@#@        author_id@#@    ) fans@#@  --order by fans_num desc@#@),@#@@#@fans_sex as (@#@  --粉丝男女比例@#@  select@#@    author_id,@#@    collect_list(concat_ws(':',cast(gender as string),cast(fans_num as string))) as gender_dist@#@  from@#@    (@#@      select@#@        author_id,@#@        coalesce(sex ,-1)  as gender,@#@        count(distinct fans_pin) as fans_num@#@      from@#@        app.app_celebrity_author_fans_mid@#@      where@#@        dt = '2018-12-26'@#@      group by@#@        author_id,@#@        coalesce(sex ,-1)@#@      order by@#@        author_id,@#@        fans_num desc@#@    ) fans@#@  group by@#@    author_id@#@  --order by fans_num desc@#@),@#@@#@fans_age as (@#@  --年龄层分布@#@  select@#@    author_id,@#@    collect_list(concat_ws(':',cast(age as string),cast(fans_num as string))) as age_dist@#@  from@#@    (@#@      select@#@        author_id,@#@        coalesce(age ,-1) as age,@#@        count(distinct fans_pin) as fans_num@#@      from@#@        app.app_celebrity_author_fans_mid@#@      where@#@        dt = '2018-12-26'@#@      group by@#@        author_id,@#@        coalesce(age ,-1)@#@      order by@#@        author_id,@#@        fans_num desc@#@    ) fans@#@  group by@#@    author_id@#@  --order by fans_num desc@#@),@#@@#@fans_area as (@#@  --地域分布@#@  select@#@    author_id,@#@    collect_list(concat_ws(':',cast(province as string),cast(fans_num as string))) as area_dist@#@  from@#@    (@#@      select@#@        author_id,@#@        coalesce(province ,-1) as province,@#@        count(distinct fans_pin) as fans_num@#@      from@#@        app.app_celebrity_author_fans_mid@#@      where@#@        dt = '2018-12-26'@#@      group by@#@        author_id,@#@        coalesce(province ,-1)@#@      order by@#@        author_id,@#@        fans_num  desc@#@    ) fans@#@  group by@#@    author_id@#@  --order by fans_num desc@#@),@#@@#@fans_cate as (@#@  --类目偏好@#@  select@#@    author_id,@#@    collect_list(concat_ws(':',cast(favor_cate2 as string),cast(fans_num as string))) as favor_cate2_dist@#@  from@#@    (@#@      select@#@        author_id,@#@        coalesce(favor_cate2 ,-1) as favor_cate2, --类目ID, 以免变动@#@        count(distinct fans_pin) as fans_num@#@      from@#@        app.app_celebrity_author_fans_mid@#@      where@#@        dt = '2018-12-26'@#@      group by@#@        author_id,@#@        coalesce(favor_cate2 ,-1)@#@      order by@#@        author_id,@#@        fans_num desc@#@    ) fans@#@  group by@#@    author_id@#@  --order by fans_num desc@#@),@#@@#@fans_power as (@#@  --购买力@#@  select@#@    author_id,@#@    collect_list(concat_ws(':',cast(purchpower as string),cast(fans_num as string))) as power_dist@#@  from@#@    (@#@      select@#@        author_id,@#@        cast(coalesce(purchpower, -1) as int) as purchpower, -- -1.0 -> -1@#@        count(distinct fans_pin) as fans_num@#@      from@#@        app.app_celebrity_author_fans_mid@#@      where@#@        dt = '2018-12-26'@#@      group by@#@        author_id,@#@        cast(coalesce(purchpower, -1) as int)@#@      order by@#@        author_id,@#@        fans_num desc@#@    ) fans@#@  group by@#@    author_id@#@  --order by fans_num desc@#@),@#@@#@task_num as (@#@  select@#@    applicant_pin,@#@    sum(finished_nums) as finished_nums,@#@    sum(all_nums) as all_nums,@#@    sum(finished_price) as finished_price@#@  from@#@    (@#@      -- 完成任务数量, 总数@#@      select@#@        applicant_pin,@#@        sum(case@#@          when status = 13 or status = 14 or status = 15 then 1@#@          else 0@#@        end) as finished_nums, --完成@#@        count(1) as all_nums,-- 所有@#@        sum(case@#@          when status = 13 or status = 14 or status = 15 then coalesce(commission, 0.0)@#@          else 0@#@        end) as finished_price@#@      from@#@        fdm.fdm_mobile_sh_promotion_discovery_cms_discovery_assignment_applicant_map_chain@#@      where@#@        dp = 'ACTIVE'@#@        and status in (13, 14, 15, 17, 18, 19, 22, 23, 25, 28, 31)@#@      group by@#@        applicant_pin@#@@#@      union all@#@@#@      -- 完成服务订单数量, 总数@#@      select@#@        author_pin as applicant_pin,@#@        sum(case@#@          when order_status = 13 or order_status = 14 or order_status = 15 then 1@#@          else 0@#@        end) as finished_nums, --完成@#@        count(1) as all_nums,-- 所有@#@        sum(case@#@          when order_status = 13 or order_status = 14 or order_status = 15 then coalesce(price, 0.0)@#@          else 0@#@        end) as finished_price@#@      from@#@        fdm.fdm_mobile_sh_promotion_discovery_investment_service_order_chain@#@      where@#@        dp = 'ACTIVE'@#@        and order_status in (13, 14, 15, 17, 18, 31)@#@      group by@#@        author_pin@#@    ) a@#@  group by@#@    applicant_pin@#@),@#@@#@top3types as (@#@  -- top 3 达人常用子渠道@#@  SELECT@#@    author_id,@#@    collect_list(article_type_num) as top3_types@#@  from@#@    (@#@     select@#@        *,@#@        concat_ws(':',cast(article_type as string), cast(num as string)) as article_type_num,@#@        row_number() over (partition by author_id order by num desc) as type_index@#@      from@#@        (@#@          select@#@            author_id,@#@            coalesce(article_type ,-1) as article_type,@#@            count(1) as num@#@          from@#@            app.app_celebrity_article_state_info_indexed_mid@#@          where@#@            dt = '2018-12-26'@#@          group by@#@            author_id,@#@            coalesce(article_type ,-1)@#@        ) a@#@    ) indexed@#@  where@#@    type_index <= 3@#@  group by@#@    author_id@#@),@#@@#@type_list as (@#@  -- 达人各子渠道发文数量@#@  SELECT@#@    author_id,@#@    collect_list(article_type_num) as all_types@#@  from@#@    (@#@     select@#@        *,@#@        concat_ws(':',cast(article_type as string), cast(num as string)) as article_type_num,@#@        row_number() over (partition by author_id order by num desc) as type_index@#@      from@#@        (@#@          select@#@            author_id,@#@            coalesce(article_type ,-1)  as article_type,@#@            count(1) as num@#@          from@#@            app.app_celebrity_article_state_info_indexed_mid@#@          where@#@            dt = '2018-12-26'@#@          group by@#@            author_id,@#@            coalesce(article_type ,-1)@#@        ) a@#@    ) indexed@#@  group by@#@    author_id@#@),@#@@#@import as (@#@  -- 各种引入uv,订单量,金额@#@  select@#@    author_id,@#@    count(1) as article_num,@#@    sum(coalesce(UV,0)) as article_UV,@#@    sum(coalesce(ordNum_in_direct,0) + coalesce(ordNum_in_indirect,0)) as num_direct,@#@    sum(coalesce(ordSum_in_direct,0) + coalesce(ordSum_in_indirect,0)) as money_direct@#@  from@#@    app.app_celebrity_article_state_info_indexed_mid@#@  where@#@    dt = '2018-12-26'@#@  group by@#@    author_id@#@),@#@@#@pv as (@#@  SELECT@#@    author_id,@#@    collect_list(article_pv) as hotest_articles@#@  from@#@    (@#@      select@#@        *@#@      from@#@        app.app_celebrity_article_state_info_indexed_mid@#@      where@#@        dt = '2018-12-26'@#@        and pv_index <= 10@#@      order by@#@        author_id,@#@        pv_index@#@    ) a@#@  group by@#@    author_id@#@),@#@@#@pub as (@#@  SELECT@#@    author_id,@#@    collect_list(article_pub) as newest_articles@#@  from@#@    (@#@      select@#@        *@#@      from@#@        app.app_celebrity_article_state_info_indexed_mid@#@      where@#@        dt = '2018-12-26'@#@        and pub_index <= 10@#@      order by@#@        author_id,@#@        pub_index@#@    ) a@#@  group by@#@    author_id@#@),@#@@#@fen as (@#@  SELECT@#@    author_id1,@#@    score as content_score@#@  from@#@    app.app_celebrity_rank_da@#@),@#@@#@live_add_info as (@#@  select@#@    *,@#@    concat_ws(',', cast(coalesce(common_task_complete_num, 0) as string),@#@      cast(coalesce(common_task_complete_ratio, 0) as string),@#@      cast(coalesce(common_task_commission_avg, 0) as string), common_socre) as common_task,@#@    concat_ws(',', cast(coalesce(live_task_complete_num, 0) as string),@#@      cast(coalesce(live_task_complete_ratio, 0) as string),@#@      cast(coalesce(live_task_commission_avg, 0) as string), live_socre) as live_task,@#@    concat_ws(',', cast(coalesce(package_task_complete_num, 0) as string),@#@      cast(coalesce(package_task_complete_ratio, 0) as string),@#@      cast(coalesce(package_task_commission_avg, 0) as string), package_socre) as package_task@#@  from@#@    (@#@      SELECT@#@        t1.author_id,@#@        common_task_complete_num,@#@        cast(common_task_complete_num / common_task_num as decimal(20,4)) as common_task_complete_ratio,@#@        cast(common_complete_commission / common_task_complete_num as decimal(20,4)) as common_task_commission_avg,@#@        live_task_complete_num ,@#@        cast(live_task_complete_num / live_task_num as decimal(20,4)) as live_task_complete_ratio,@#@        cast(live_complete_commission / live_task_complete_num as decimal(20,4)) as live_task_commission_avg,@#@        package_task_complete_num,@#@        cast(package_task_complete_num / package_task_num as decimal(20,4)) as package_task_complete_ratio,@#@        cast(package_complete_commission / package_task_complete_num as decimal(20,4)) as package_task_commission_avg,@#@        cast(coalesce(common_socre,0.0) as string) as common_socre,@#@        cast(coalesce(live_socre,0.0) as string) as live_socre,@#@        cast(coalesce(package_socre,0.0) as string) as package_socre,@#@        cast(history_pv_sum/live_num as decimal(20,4)) as history_pv_average,@#@        history_pv_sum@#@      FROM@#@        (@#@          select@#@            tt1.author_id,@#@            common_task_num,@#@            live_task_num,@#@            common_task_complete_num,@#@            live_task_complete_num,@#@            common_complete_commission,@#@            live_complete_commission,@#@            package_task_num,@#@            package_task_complete_num,@#@            package_complete_commission@#@          from@#@            (@#@              SELECT@#@                applicant_id as author_id,@#@                COUNT(DISTINCT(@#@                  CASE@#@                    WHEN(assignment_type = '0' and selected_time is not null) THEN assignment_id@#@                    ELSE NULL@#@                  end)) as common_task_num,@#@                COUNT(DISTINCT(@#@                  CASE@#@                    WHEN(assignment_type = 1 and selected_time is not null)THEN assignment_id@#@                    ELSE NULL@#@                  end)) as live_task_num,@#@                COUNT(DISTINCT(@#@                  CASE@#@                    WHEN(assignment_type = '0' and status in(13, 14, 15)) THEN assignment_id@#@                    ELSE NULL@#@                  end)) as common_task_complete_num,@#@                COUNT(DISTINCT(@#@                  CASE@#@                    WHEN(assignment_type = 1 and status in(13, 14, 15)) THEN assignment_id@#@                    ELSE NULL@#@                  end)) as live_task_complete_num,@#@                sum(@#@                  CASE@#@                    WHEN(assignment_type = '0' and status in(13, 14, 15)) THEN commission@#@                    ELSE 0@#@                  end) as common_complete_commission,@#@                sum(@#@                  CASE@#@                    WHEN(assignment_type = 1 and status in(13, 14, 15)) THEN commission@#@                    ELSE 0@#@                  end) as live_complete_commission@#@              FROM@#@                fdm.fdm_mobile_sh_promotion_discovery_cms_discovery_assignment_applicant_map_chain@#@              WHERE@#@                dp = 'ACTIVE'@#@              GROUP BY@#@                applicant_id@#@            ) tt1@#@          left join@#@            (@#@              select@#@                author_id,@#@                count(DISTINCT task_id) as package_task_num,@#@                count(DISTINCT (@#@                  CASE@#@                    WHEN status in( 13, 14, 15) THEN task_id@#@                    ELSE NULL@#@                  end)@#@                ) as package_task_complete_num,@#@                sum(@#@                  CASE@#@                    WHEN status in( 13, 14, 15) THEN commission@#@                    ELSE NULL@#@                  end@#@                ) package_complete_commission@#@              from@#@                app.app_celebrity_task_info_da@#@              where@#@                dt = '2018-12-26'@#@                and package_flag = 2@#@                and selected_time is not null@#@              group by@#@                author_id@#@            ) tt2@#@          on@#@            tt1.author_id = tt2.author_id@#@        ) t1@#@      LEFT JOIN@#@        (@#@          SELECT@#@            author_id,@#@            sum(visit_PV) as history_pv_sum,@#@            COUNT(DISTINCT room_id) as live_num@#@          FROM@#@            app.app_live_effect_da@#@          WHERE@#@            dt = '2018-12-26'@#@          GROUP BY@#@            author_id@#@        ) t2@#@      on@#@        t1.author_id = t2.author_id@#@      LEFT JOIN@#@        (@#@          select@#@            author_id,@#@            cast(socre as decimal(20,2))  as common_socre@#@          from@#@            app.app_celebrity_socre_mid_2@#@          where@#@            package_flag = 0@#@        ) common_socre@#@      on@#@        t1.author_id = common_socre.author_id@#@      LEFT JOIN@#@        (@#@          select@#@            author_id,@#@            cast(socre as decimal(20,2)) as live_socre@#@          from@#@            app.app_celebrity_socre_mid_2@#@          where@#@            package_flag = 1@#@        ) live_socre@#@      on@#@        t1.author_id = live_socre.author_id@#@      LEFT JOIN@#@        (@#@          select@#@            author_id,@#@            cast(socre as decimal(20,2))  as package_socre@#@          from@#@            app.app_celebrity_socre_mid_2@#@          where@#@            package_flag = 2@#@        ) package_socre@#@      on@#@        t1.author_id = package_socre.author_id@#@    )tt@#@),@#@@#@fifth_add_mid as (@#@  -- 任务平台第五期增加字段@#@  SELECT@#@    author_id,@#@    agency_pin,@#@    lives_num,@#@    hotest_lives,@#@    main_area_id,@#@    main_area_delta,@#@    celebrity_level,@#@    fans_num@#@  from@#@    app.app_celebrity_basic_info_5thAdd_mid@#@  where@#@    dt = '2018-12-26'@#@  group by@#@    author_id,@#@    agency_pin,@#@    lives_num,@#@    hotest_lives,@#@    main_area_id,@#@    main_area_delta,@#@    celebrity_level,@#@    fans_num@#@)@#@@#@insert overwrite table app.app_celebrity_basic_info_da partition(dt='2018-12-26')@#@select@#@  daren.author_id,@#@  daren.author_pin,@#@  daren.userpic,@#@  daren.username,@#@  daren.synopsis,@#@  erji.area_2nd_cate,@#@  sku.area, --达人擅长领域分布@#@  coalesce(fifth_add_mid.fans_num, fans_rank.fans_num),@#@  fans_rank.rank,@#@  fans_sex.gender_dist,@#@  fans_age.age_dist,@#@  fans_area.area_dist,@#@  fans_cate.favor_cate2_dist,@#@  fans_power.power_dist,@#@  task_num.finished_nums as comp_num,  --完成任务数量@#@  case when task_num.all_nums is not null and task_num.all_nums <> 0 then task_num.finished_nums/task_num.all_nums else 0.0 end  as comp_rate, -- 完成任务比例@#@  case when task_num.finished_nums is not null and task_num.finished_nums <> 0 then task_num.finished_price/task_num.finished_nums  else 0.0 end  as hist_avg_prc, --完成任务均单价@#@  5.0 as comp_score, --综合评分@#@  dafen.salesman_rate as seller_rank, -- 商家评分@#@  coalesce(fen.content_score, 0.0) as content_rank, -- 内容评分@#@  top3types.top3_types as top3_channels, -- top3 渠道@#@  type_list.all_types as channels_list, -- 渠道列表@#@  import.article_UV/import.article_num as avg_visit, --平均浏览人数@#@  case when import.article_num is not null and import.article_num <> 0 then  import.num_direct/import.article_num else 0.0 end    as avg_visit, --平均引入订单量@#@  case when import.article_num is not null and import.article_num <> 0 then  import.money_direct/import.article_num else 0.0 end  as avg_import_prc, --平均引入订单金额@#@  pv.hotest_articles, -- 最热10文@#@  pub.newest_articles, -- 最新10文@#@  common_task_complete_num,@#@  common_task_complete_ratio,@#@  live_task_complete_num as special_task_complete_num,@#@  live_task_complete_ratio as special_task_complete_ratio,@#@  history_pv_average,@#@  history_pv_sum,@#@  sku.celebrity_type,@#@  sku.area_tag,@#@  fifth_add_mid.agency_pin,@#@  fifth_add_mid.lives_num,@#@  fifth_add_mid.hotest_lives,@#@  fifth_add_mid.main_area_id,@#@  fifth_add_mid.main_area_delta,@#@  fifth_add_mid.celebrity_level,@#@  null as self_select_area,@#@  common_task,@#@  live_task,@#@  package_task,@#@  sku.area_tag_id@#@from daren@#@left outer join erji  on daren.author_id = erji.author_id@#@left outer join dafen on daren.author_pin = dafen.author_pin@#@left outer join sku   on daren.author_id = sku.author_id@#@left outer join fans_rank  on daren.author_id = fans_rank.author_id@#@left outer join fans_sex   on daren.author_id = fans_sex.author_id@#@left outer join fans_age   on daren.author_id = fans_age.author_id@#@left outer join fans_area  on daren.author_id = fans_area.author_id@#@left outer join fans_cate  on daren.author_id = fans_cate.author_id@#@left outer join fans_power on daren.author_id = fans_power.author_id@#@left outer join task_num   on daren.author_pin = task_num.applicant_pin@#@left outer join top3types  on daren.author_id = top3types.author_id@#@left outer join type_list  on daren.author_id = type_list.author_id@#@left outer join import     on daren.author_id = import.author_id@#@left outer join  pv        on daren.author_id = pv.author_id@#@left outer join  pub       on daren.author_id = pub.author_id@#@left outer join fen        on daren.author_id = fen.author_id1@#@left outer join live_add_info on daren.author_id = live_add_info.author_id@#@left outer join fifth_add_mid on daren.author_id = fifth_add_mid.author_id	";
        str = str.replaceAll("@#@", "\n");
        str = str.replaceAll("`", "'");
        str = str.replaceAll("\"NULL\"", "NULL");
       String result =  new AstParser().astParser(str);
        System.out.println(result);
    }
}
